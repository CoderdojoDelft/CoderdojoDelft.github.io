{"version":3,"sources":["style/variables.js","style/global-style.js","style/fonts/rebas-neue.js","component/HeaderComponent.js","element/PageTitle.js","page/HomePage.js","component/MenuComponent.js","element/Container.js","element/Content.js","page/NextEditionPage.js","App.js","serviceWorker.js","index.js"],"names":["color","black","smoke","white","selective","breakpoint","width","whitespace","font","GlobalStyle","createGlobalStyle","_templateObject","weight","arguments","length","undefined","style","concat","rebasNeue","BackToHome","styled","a","HeaderComponent_templateObject","Logo","img","_templateObject2","HeaderComponent","react_default","createElement","href","src","alt","PageTitle","h1","PageTitle_templateObject","Home","div","HomePage_templateObject","HomePage","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","Component","Nav","nav","MenuComponent_templateObject","Link","NavLink","MenuComponent_templateObject2","MenuComponent","exact","to","activeClassName","Container","Container_templateObject","Content","Content_templateObject","NextEditionPage","App","BrowserRouter","Fragment","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f8a5d62.chunk.js","sourcesContent":["export const color = {\n    black: {\n        black: '#000000'\n    },\n    white: {\n        smoke: '#f0f0f0',\n        white: '#ffffff'\n    },\n    yellow: {\n        selective: '#fab800'\n    }\n};\n\nexport const breakpoint = {\n    xs: 320,\n    sm: 768,\n    md: 992,\n    lg: 1200\n};\n\nexport const width = {\n    container: 950,\n    content: 660\n};\n\nexport const whitespace = [0, 4, 8, 16, 24];\n\nexport const font = {\n    size: [24],\n    line: [1]\n};\n","import { createGlobalStyle } from 'styled-components';\n\nimport { color } from './variables';\nimport { rebasNeue } from './fonts/rebas-neue';\n\nexport const GlobalStyle = createGlobalStyle`\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n${rebasNeue()};\n\nbody {\n    font-family: Arial, Helvetica, Tahoma, san-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background-color: ${color.white.smoke};\n}\n`;\n","\r\nexport function rebasNeue(weight = 'normal', style = 'normal') {\r\n    return `\r\n        @font-face {\r\n            font-family: 'Bebas Neue W01 Regular';\r\n            src: url('/font/rebas-neue/3d9ec9a9-76a2-4cfe-b376-76e7340c3b50.eot?#iefix');\r\n            src: url('/font/rebas-neue/3d9ec9a9-76a2-4cfe-b376-76e7340c3b50.eot?#iefix') format('eot'), url('/font/rebas-neue/e0d6f852-5401-4bbf-9672-47a50c5c87c6.woff2') format('woff2'), url('/font/rebas-neue/7fedd582-6ae3-4850-be2f-4acae2e74fa5.woff') format('woff'), url('/font/rebas-neue/d6e08ef3-40db-4ac3-82df-f062f55a72f5.ttf') format('truetype');\r\n            font-weight: ${weight};\r\n            font-style: ${style};\r\n        }`;\r\n}\r\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst BackToHome = styled.a`\n    display: block;\n`;\n\nconst Logo = styled.img`\n    display: block;\n    width: 100%;\n    max-width: 570px;\n    height: auto;\n`;\n\nexport function HeaderComponent() {\n    return (\n        <header>\n            <BackToHome href=\"/\">\n                <Logo src=\"/img/logo.png\" alt=\"Coder Dojo Delft\" />\n            </BackToHome>\n        </header>\n    );\n}\n","import styled from 'styled-components';\n\nimport { color, font, whitespace } from '../style/variables';\n\nexport const PageTitle = styled.h1`\n    padding: ${whitespace[2]}px;\n    background-color: ${color.yellow.selective};\n    color: ${color.white.white};\n    font-family: 'Bebas Neue W01 Regular';\n    font-size: ${font.size[0]}px;\n    line-height: ${font.line[0]};\n`;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport { PageTitle } from '../element/PageTitle';\n\nconst Home = styled.div`\n    text-align: left;\n`;\n\nexport class HomePage extends Component {\n    render() {\n        return (\n            <Home>\n                <PageTitle>Welkom bij CoderDojo Delft!</PageTitle>\n            </Home>\n        );\n    }\n}\n","import { NavLink } from 'react-router-dom';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { color, font, whitespace } from '../style/variables';\n\nconst Nav = styled.nav`\n    flex-shrink: 0;\n    flex-grow: 1;\n    margin-right: ${whitespace[3]}px;\n    text-align: right;\n`;\n\nconst Link = styled(NavLink)`\n    display: inline-block;\n    padding: ${whitespace[1]}px;\n    color: ${color.black.black};\n    font-family: 'Bebas Neue W01 Regular';\n    font-size: ${font.size[0]}px;\n    line-height: ${font.line[0]};\n    text-decoration: none;\n    text-align: right;\n    \n    &.active {\n        background-color: ${color.yellow.selective};\n        color: ${color.white.white};\n    }\n`;\n\nexport function MenuComponent() {\n    return (\n        <Nav>\n            <ul>\n                <li>\n                    <Link exact to=\"/\" activeClassName=\"active\">Home</Link>\n                </li>\n                <li>\n                    <Link exact to=\"/volgendeeditie\" activeClassName=\"active\">Volgende editie</Link>\n                </li>\n            </ul>\n        </Nav>\n    );\n}\n","import styled from 'styled-components';\n\nimport { breakpoint, width } from '../style/variables';\n\nexport const Container = styled.div`\n    width: 100%;\n    \n    @media only screen and (min-width: ${breakpoint.md}px) {\n        display: flex;\n        justify-content: flex-end;\n        margin: 0 auto;\n        width: ${width.container}px;\n    }\n`;\n","import styled from 'styled-components';\n\nimport { breakpoint, width } from '../style/variables';\n\nexport const Content = styled.div`\n    width: 100%;\n    \n    @media only screen and (min-width: ${breakpoint.md}px) {\n        width: ${width.content}px;\n    }\n`;\n","import React, { Component } from 'react';\n\nimport { PageTitle } from '../element/PageTitle';\n\nexport class NextEditionPage extends Component {\n    render() {\n        return (\n            <div>\n                <PageTitle>Volgende editie</PageTitle>\n            </div>\n        );\n    }\n}\n","import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nimport { GlobalStyle } from './style/global-style';\nimport { HeaderComponent } from './component/HeaderComponent';\nimport { HomePage } from './page/HomePage';\nimport { MenuComponent } from './component/MenuComponent';\nimport { Container } from './element/Container';\nimport { Content } from './element/Content';\nimport {NextEditionPage} from './page/NextEditionPage';\n\n\n\n\nexport class App extends Component {\n    render() {\n        return (\n            <Router>\n                <React.Fragment>\n                    <GlobalStyle />\n                    <Container>\n                        <Content>\n                            <HeaderComponent />\n                        </Content>\n                    </Container>\n                    <Container>\n                        <MenuComponent />\n                        <Content>\n                            <Route exact path=\"/\" component={ HomePage } />\n                            <Route exact path=\"/volgendeeditie\" component={ NextEditionPage } />\n                        </Content>\n                    </Container>\n                </React.Fragment>\n            </Router>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}